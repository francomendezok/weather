(()=>{async function t(t){const e=await async function(t){try{if(t){const e="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&q="+t,n=await fetch(e);return await n.json()}{const t=await async function(){try{const t=await fetch("https://ipinfo.io?token=c754c5e436b57a");return await t.json()}catch(t){console.error("Error al obtener la ubicaciÃ³n del usuario:",t)}}();if(t){const e="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&q="+t.city,n=await fetch(e);return await n.json()}}}catch(t){console.log(t)}}(t),n=await async function(t){const e="https://restcountries.com/v3.1/name/"+t,n=await fetch(e);return(await n.json())[0].flags.png}(e.location.country),o=await e.current.condition.icon,c=document.getElementById("img-weather"),a=document.getElementById("city"),i=document.getElementById("hour"),r=e.location.localtime.split(" "),s=document.getElementById("condition"),u=document.getElementById("temperature"),m=document.getElementById("temperature-fahrenheit"),l=document.getElementById("title"),d=document.getElementById("flag");l.textContent=`${e.location.name}, ${e.location.country}`,d.src=n,a.textContent=e.location.name,i.textContent=r[1],u.textContent=`${e.current.temp_c} Celsius`,m.textContent=`${e.current.temp_f} Fahrenheit`,c.src=o,s.textContent=await e.current.condition.text}t();const e=document.getElementById("submit"),n=document.getElementById("search-input");e.addEventListener("click",(e=>{e.preventDefault(),t(n.value)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUF3Q0VBLGVBQWVDLEVBQWVDLEdBQzVCLE1BQU1DLFFBOUJSSCxlQUEyQkksR0FDekIsSUFDSSxHQUFJQSxFQUFRLENBQ1IsTUFBTUMsRUFBTSxxRkFBdUZELEVBQzdGRSxRQUFnQkMsTUFBTUYsR0FFNUIsYUFEbUJDLEVBQVFFLE1BRS9CLENBQU8sQ0FDSCxNQUFNTixRQWxCaEJGLGlCQUNFLElBQ0UsTUFBTVMsUUFBaUJGLE1BQU0sMENBRTdCLGFBRG1CRSxFQUFTRCxNQUU5QixDQUFFLE1BQU9FLEdBQ1BDLFFBQVFELE1BQU0sNkNBQThDQSxFQUM5RCxDQUNGLENBVTZCRSxHQUNuQixHQUFJVixFQUFNLENBQ04sTUFBTUcsRUFBTSxxRkFBdUZILEVBQUtBLEtBQ2xHSSxRQUFnQkMsTUFBTUYsR0FFNUIsYUFEbUJDLEVBQVFFLE1BRS9CLENBQ0osQ0FDSixDQUFFLE1BQU9FLEdBQ0xDLFFBQVFFLElBQUlILEVBQ2hCLENBQ0YsQ0FXcUJJLENBQVdaLEdBQ3hCYSxRQVZSZixlQUF3QmdCLEdBQ3RCLE1BQU1YLEVBQU0sdUNBQXlDVyxFQUMvQ1AsUUFBaUJGLE1BQU1GLEdBRzdCLGFBRm1CSSxFQUFTRCxRQUNWLEdBQUdTLE1BQU1DLEdBRTdCLENBSXFCQyxDQUFRaEIsRUFBS2lCLFNBQVNKLFNBRW5DSyxRQUFhbEIsRUFBS21CLFFBQVFDLFVBQVVDLEtBQ3BDQyxFQUFNQyxTQUFTQyxlQUFlLGVBQzlCQyxFQUFXRixTQUFTQyxlQUFlLFFBQ25DRSxFQUFPSCxTQUFTQyxlQUFlLFFBRS9CRyxFQURXM0IsRUFBS2lCLFNBQVNXLFVBQ0pDLE1BQU0sS0FDM0JULEVBQVlHLFNBQVNDLGVBQWUsYUFDcENNLEVBQWNQLFNBQVNDLGVBQWUsZUFDdENPLEVBQWVSLFNBQVNDLGVBQWUsMEJBQ3ZDUSxFQUFRVCxTQUFTQyxlQUFlLFNBQ2hDUyxFQUFVVixTQUFTQyxlQUFlLFFBQ3hDUSxFQUFNRSxZQUFlLEdBQUdsQyxFQUFLaUIsU0FBU2tCLFNBQVNuQyxFQUFLaUIsU0FBU0osVUFDN0RvQixFQUFRZixJQUFNTixFQUVkYSxFQUFTUyxZQUFjbEMsRUFBS2lCLFNBQVNrQixLQUNyQ1QsRUFBS1EsWUFBY1AsRUFBVSxHQUM3QkcsRUFBWUksWUFBYyxHQUFHbEMsRUFBS21CLFFBQVFpQixpQkFDMUNMLEVBQWFHLFlBQWMsR0FBR2xDLEVBQUttQixRQUFRa0Isb0JBQzNDZixFQUFJSixJQUFNQSxFQUNWRSxFQUFVYyxrQkFBb0JsQyxFQUFLbUIsUUFBUUMsVUFBVWtCLElBQ3ZELENBRUZ4QyxJQUdBLE1BQU15QyxFQUFTaEIsU0FBU0MsZUFBZSxVQUNqQ2dCLEVBQWNqQixTQUFTQyxlQUFlLGdCQUM1Q2UsRUFBT0UsaUJBQWlCLFNBQVNDLElBQzdCQSxFQUFNQyxpQkFDTjdDLEVBQWMwQyxFQUFZSSxNQUFNLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIiBcclxuICBhc3luYyBmdW5jdGlvbiBnZXRVc2VyTG9jYXRpb24oKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2lwaW5mby5pbz90b2tlbj1jNzU0YzVlNDM2YjU3YScpO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIG9idGVuZXIgbGEgdWJpY2FjacOzbiBkZWwgdXN1YXJpbzonLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyIChzZWFyY2gpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgaWYgKHNlYXJjaCkge1xyXG4gICAgICAgICAgICBjb25zdCB1cmwgPSBcImh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PTZjMzg3ODc2NzcwMDQ2NTJiZGEyMDMxMzYyMzIyMDkmcT1cIiArIHNlYXJjaFxyXG4gICAgICAgICAgICBjb25zdCB3ZWF0aGVyID0gYXdhaXQgZmV0Y2godXJsKVxyXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgd2VhdGhlci5qc29uKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNpdHkgPSBhd2FpdCBnZXRVc2VyTG9jYXRpb24oKTtcclxuICAgICAgICAgICAgaWYgKGNpdHkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IFwiaHR0cHM6Ly9hcGkud2VhdGhlcmFwaS5jb20vdjEvZm9yZWNhc3QuanNvbj9rZXk9NmMzODc4NzY3NzAwNDY1MmJkYTIwMzEzNjIzMjIwOSZxPVwiICsgY2l0eS5jaXR5XHJcbiAgICAgICAgICAgICAgICBjb25zdCB3ZWF0aGVyID0gYXdhaXQgZmV0Y2godXJsKVxyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHdlYXRoZXIuanNvbigpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIGdldEZsYWcgKGNvdW50cnkpIHtcclxuICAgIGNvbnN0IHVybCA9IFwiaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmNvbS92My4xL25hbWUvXCIgKyBjb3VudHJ5O1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIGNvbnN0IGZsYWcgPSBkYXRhWzBdLmZsYWdzLnBuZztcclxuICAgIHJldHVybiBmbGFnO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gcmVuZGVyV2VhdGhlciAoY2l0eSkge1xyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldFdlYXRoZXIoY2l0eSk7XHJcbiAgICBjb25zdCBmbGFnID0gYXdhaXQgZ2V0RmxhZyhkYXRhLmxvY2F0aW9uLmNvdW50cnkpO1xyXG5cclxuICAgIGNvbnN0IHNyYyA9ICBhd2FpdCBkYXRhLmN1cnJlbnQuY29uZGl0aW9uLmljb247XHJcbiAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nLXdlYXRoZXInKTtcclxuICAgIGNvbnN0IGNpdHlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NpdHknKTtcclxuICAgIGNvbnN0IGhvdXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaG91cicpO1xyXG4gICAgY29uc3QgZnVsbEhvdXIgPSBkYXRhLmxvY2F0aW9uLmxvY2FsdGltZTtcclxuICAgIGNvbnN0IGxvY2FsVGltZSA9IGZ1bGxIb3VyLnNwbGl0KCcgJyk7XHJcbiAgICBjb25zdCBjb25kaXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29uZGl0aW9uJyk7XHJcbiAgICBjb25zdCB0ZW1wZXJhdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZW1wZXJhdHVyZScpO1xyXG4gICAgY29uc3QgdGVtcGVyYXR1cmVGID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXBlcmF0dXJlLWZhaHJlbmhlaXQnKTtcclxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpdGxlJyk7XHJcbiAgICBjb25zdCBmbGFnSU1HID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZsYWcnKTtcclxuICAgIHRpdGxlLnRleHRDb250ZW50ID0gIGAke2RhdGEubG9jYXRpb24ubmFtZX0sICR7ZGF0YS5sb2NhdGlvbi5jb3VudHJ5fWAgO1xyXG4gICAgZmxhZ0lNRy5zcmMgPSBmbGFnO1xyXG4gICAgXHJcbiAgICBjaXR5TmFtZS50ZXh0Q29udGVudCA9IGRhdGEubG9jYXRpb24ubmFtZTtcclxuICAgIGhvdXIudGV4dENvbnRlbnQgPSBsb2NhbFRpbWVbMV07XHJcbiAgICB0ZW1wZXJhdHVyZS50ZXh0Q29udGVudCA9IGAke2RhdGEuY3VycmVudC50ZW1wX2N9IENlbHNpdXNgO1xyXG4gICAgdGVtcGVyYXR1cmVGLnRleHRDb250ZW50ID0gYCR7ZGF0YS5jdXJyZW50LnRlbXBfZn0gRmFocmVuaGVpdGA7XHJcbiAgICBpbWcuc3JjID0gc3JjO1xyXG4gICAgY29uZGl0aW9uLnRleHRDb250ZW50ID0gYXdhaXQgZGF0YS5jdXJyZW50LmNvbmRpdGlvbi50ZXh0O1xyXG4gIH1cclxuICBcclxucmVuZGVyV2VhdGhlcigpO1xyXG5cclxuXHJcbmNvbnN0IHN1Ym1pdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXQnKTtcclxuY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VhcmNoLWlucHV0Jyk7XHJcbnN1Ym1pdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICByZW5kZXJXZWF0aGVyKHNlYXJjaElucHV0LnZhbHVlKTtcclxufSkiXSwibmFtZXMiOlsiYXN5bmMiLCJyZW5kZXJXZWF0aGVyIiwiY2l0eSIsImRhdGEiLCJzZWFyY2giLCJ1cmwiLCJ3ZWF0aGVyIiwiZmV0Y2giLCJqc29uIiwicmVzcG9uc2UiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRVc2VyTG9jYXRpb24iLCJsb2ciLCJnZXRXZWF0aGVyIiwiZmxhZyIsImNvdW50cnkiLCJmbGFncyIsInBuZyIsImdldEZsYWciLCJsb2NhdGlvbiIsInNyYyIsImN1cnJlbnQiLCJjb25kaXRpb24iLCJpY29uIiwiaW1nIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNpdHlOYW1lIiwiaG91ciIsImxvY2FsVGltZSIsImxvY2FsdGltZSIsInNwbGl0IiwidGVtcGVyYXR1cmUiLCJ0ZW1wZXJhdHVyZUYiLCJ0aXRsZSIsImZsYWdJTUciLCJ0ZXh0Q29udGVudCIsIm5hbWUiLCJ0ZW1wX2MiLCJ0ZW1wX2YiLCJ0ZXh0Iiwic3VibWl0Iiwic2VhcmNoSW5wdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==