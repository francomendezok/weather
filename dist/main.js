(()=>{async function t(t){try{if(t){const e=document.getElementById("search-input"),n="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&days=3&q="+t,o=await fetch(n);if(400!==o.status)return e.placeholder="Search Location",await o.json();e.placeholder="City not found ðŸ˜•"}else{const t=await async function(){try{const t=await fetch("https://ipinfo.io?token=c754c5e436b57a");return await t.json()}catch(t){console.error("Error al obtener la ubicaciÃ³n del usuario:",t)}}();if(t){const e="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&days=3&q="+t.city,n=await fetch(e);return await n.json()}}}catch(t){console.log(t)}}async function e(e){const n=await t(e),o=await async function(t){const e="https://restcountries.com/v3.1/name/"+t,n=await fetch(e);return(await n.json())[0].flags.png}(n.location.country),a=await n.current.condition.icon,c=document.getElementById("img-weather"),i=document.getElementById("city"),r=document.getElementById("hour"),s=n.location.localtime.split(" "),l=document.getElementById("condition"),u=document.getElementById("temperature"),m=document.getElementById("temperature-max-min"),d=document.getElementById("title"),y=document.getElementById("flag"),f=document.querySelector("link[rel*='icon']");d.textContent=`${n.location.name}, ${n.location.country}`,y.src=o,f.href=o,document.title=n.location.name,i.textContent=n.location.name,r.textContent=s[1],u.textContent=`${n.current.temp_c} Celsius`,m.textContent=`Max: ${n.forecast.forecastday[0].day.maxtemp_c}, Min: ${n.forecast.forecastday[0].day.mintemp_c}`,c.src=a,l.textContent=await n.current.condition.text}async function n(e){const n=await t(e),o=function(){const t=new Date,e=new Date(t);e.setDate(t.getDate()+1);const n=new Date(t);n.setDate(t.getDate()+2);const o=new Date(t);return o.setDate(t.getDate()+3),[t,e,n,o].map((t=>t.toLocaleDateString("en-US",{weekday:"long"})))}();o[0]="Today";const a=document.querySelectorAll(".next-days"),c=document.querySelectorAll(".max"),i=document.querySelectorAll(".min"),r=document.querySelectorAll(".day-img"),s=[...a],l=n.forecast.forecastday;console.log(l);for(let t=0;t<3;t++)s[t].textContent=o[t],c[t].textContent=l[t].day.maxtemp_c,i[t].textContent=l[t].day.mintemp_c,r[t].src=l[t].day.condition.icon}const o=document.getElementById("submit"),a=document.getElementById("search-input");o.addEventListener("click",(t=>{t.preventDefault(),e(a.value),n(a.value),a.value=""})),async function(){try{await e(),await n()}catch(t){console.error(t)}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,