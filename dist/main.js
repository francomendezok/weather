(()=>{async function t(t){try{if(t){const e="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&q="+t,n=await fetch(e);return await n.json()}{const t=await async function(){try{const t=await fetch("https://ipinfo.io?token=c754c5e436b57a");return await t.json()}catch(t){console.error("Error al obtener la ubicaciÃ³n del usuario:",t)}}();if(t){const e="https://api.weatherapi.com/v1/forecast.json?key=6c38787677004652bda203136232209&q="+t.city,n=await fetch(e);return await n.json()}}}catch(t){alert("Please type a real location"),console.log(t)}}async function e(e){const n=await t(e),a=await async function(t){const e="https://restcountries.com/v3.1/name/"+t,n=await fetch(e);return(await n.json())[0].flags.png}(n.location.country),o=await n.current.condition.icon,c=document.getElementById("img-weather"),i=document.getElementById("city"),r=document.getElementById("hour"),s=n.location.localtime.split(" "),l=document.getElementById("condition"),m=document.getElementById("temperature"),u=document.getElementById("temperature-max-min"),d=document.getElementById("title"),y=document.getElementById("flag"),f=document.querySelector("link[rel*='icon']");d.textContent=`${n.location.name}, ${n.location.country}`,y.src=a,f.href=a,document.title=n.location.name,i.textContent=n.location.name,r.textContent=s[1],m.textContent=`${n.current.temp_c} Celsius`,u.textContent=`Max: ${n.forecast.forecastday[0].day.maxtemp_c}, Min: ${n.forecast.forecastday[0].day.mintemp_c}`,c.src=o,l.textContent=await n.current.condition.text}const n=document.getElementById("submit"),a=document.getElementById("search-input");n.addEventListener("click",(t=>{t.preventDefault(),e(a.value)})),e(),async function(e){await t(void 0);const n=function(){const t=new Date,e=new Date(t);e.setDate(t.getDate()+1);const n=new Date(t);n.setDate(t.getDate()+2);const a=new Date(t);return a.setDate(t.getDate()+3),[t,e,n,a].map((t=>t.toLocaleDateString("en-US",{weekday:"long"})))}();n[0]="Today";const a=[...document.querySelectorAll(".next-days")];for(let t=0;t<3;t++)a[t].textContent=n[t]}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,